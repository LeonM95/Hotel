//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoHotel.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_HOTELEntities_v2 : DbContext
    {
        public DB_HOTELEntities_v2()
            : base("name=DB_HOTELEntities_v2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CATEGORIA> CATEGORIAs { get; set; }
        public virtual DbSet<DETALLE_VENTA> DETALLE_VENTA { get; set; }
        public virtual DbSet<ESTADO_HABITACION> ESTADO_HABITACION { get; set; }
        public virtual DbSet<HABITACION> HABITACIONs { get; set; }
        public virtual DbSet<PERSONA> PERSONAs { get; set; }
        public virtual DbSet<PISO> PISOes { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTOes { get; set; }
        public virtual DbSet<RECEPCION> RECEPCIONs { get; set; }
        public virtual DbSet<TIPO_PERSONA> TIPO_PERSONA { get; set; }
        public virtual DbSet<VENTA> VENTAs { get; set; }
    
        public virtual int sp_ModificarCategoria(Nullable<int> idCategoria, string descripcion, Nullable<bool> estado, ObjectParameter resultado)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarCategoria", idCategoriaParameter, descripcionParameter, estadoParameter, resultado);
        }
    
        public virtual int sp_ModificarHabitacion(Nullable<int> idHabitacion, string numero, string detalle, Nullable<decimal> precio, string idPiso, string idCategoria, Nullable<bool> estado, ObjectParameter resultado)
        {
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("IdHabitacion", idHabitacion) :
                new ObjectParameter("IdHabitacion", typeof(int));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var idPisoParameter = idPiso != null ?
                new ObjectParameter("IdPiso", idPiso) :
                new ObjectParameter("IdPiso", typeof(string));
    
            var idCategoriaParameter = idCategoria != null ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarHabitacion", idHabitacionParameter, numeroParameter, detalleParameter, precioParameter, idPisoParameter, idCategoriaParameter, estadoParameter, resultado);
        }
    
        public virtual int sp_ModificarPersona(Nullable<int> idPersona, string tipoDocumento, string documento, string nombre, string apellido, string correo, string clave, Nullable<int> idTipoPersona, Nullable<bool> estado, ObjectParameter resultado)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var idTipoPersonaParameter = idTipoPersona.HasValue ?
                new ObjectParameter("IdTipoPersona", idTipoPersona) :
                new ObjectParameter("IdTipoPersona", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarPersona", idPersonaParameter, tipoDocumentoParameter, documentoParameter, nombreParameter, apellidoParameter, correoParameter, claveParameter, idTipoPersonaParameter, estadoParameter, resultado);
        }
    
        public virtual int sp_ModificarPiso(Nullable<int> idPiso, string descripcion, Nullable<bool> estado, ObjectParameter resultado)
        {
            var idPisoParameter = idPiso.HasValue ?
                new ObjectParameter("IdPiso", idPiso) :
                new ObjectParameter("IdPiso", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarPiso", idPisoParameter, descripcionParameter, estadoParameter, resultado);
        }
    
        public virtual int sp_ModificarProducto(Nullable<int> idProducto, string nombre, string detalle, string precio, string cantidad, Nullable<bool> estado, ObjectParameter resultado)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));
    
            var precioParameter = precio != null ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(string));
    
            var cantidadParameter = cantidad != null ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarProducto", idProductoParameter, nombreParameter, detalleParameter, precioParameter, cantidadParameter, estadoParameter, resultado);
        }
    
        public virtual int sp_RegistrarCategoria(string descripcion, ObjectParameter resultado)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarCategoria", descripcionParameter, resultado);
        }
    
        public virtual int sp_RegistrarHabitacion(string numero, string detalle, Nullable<decimal> precio, string idPiso, string idCategoria, ObjectParameter resultado)
        {
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var idPisoParameter = idPiso != null ?
                new ObjectParameter("IdPiso", idPiso) :
                new ObjectParameter("IdPiso", typeof(string));
    
            var idCategoriaParameter = idCategoria != null ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarHabitacion", numeroParameter, detalleParameter, precioParameter, idPisoParameter, idCategoriaParameter, resultado);
        }
    
        public virtual int sp_RegistrarPersona(string tipoDocumento, string documento, string nombre, string apellido, string correo, string clave, Nullable<int> idTipoPersona, ObjectParameter resultado)
        {
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var idTipoPersonaParameter = idTipoPersona.HasValue ?
                new ObjectParameter("IdTipoPersona", idTipoPersona) :
                new ObjectParameter("IdTipoPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarPersona", tipoDocumentoParameter, documentoParameter, nombreParameter, apellidoParameter, correoParameter, claveParameter, idTipoPersonaParameter, resultado);
        }
    
        public virtual int sp_RegistrarPiso(string descripcion, ObjectParameter resultado)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarPiso", descripcionParameter, resultado);
        }
    
        public virtual int sp_RegistrarProducto(string nombre, string detalle, string precio, string cantidad, ObjectParameter resultado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));
    
            var precioParameter = precio != null ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(string));
    
            var cantidadParameter = cantidad != null ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarProducto", nombreParameter, detalleParameter, precioParameter, cantidadParameter, resultado);
        }
    
        public virtual int sp_registrarRecepcion(Nullable<int> idCliente, string tipoDocumento, string documento, string nombre, string apellido, string correo, Nullable<int> idHabitacion, Nullable<System.DateTime> fechaSalida, Nullable<decimal> precioInicial, Nullable<decimal> adelanto, Nullable<decimal> precioRestante, string observacion, ObjectParameter resultado)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("IdHabitacion", idHabitacion) :
                new ObjectParameter("IdHabitacion", typeof(int));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("FechaSalida", fechaSalida) :
                new ObjectParameter("FechaSalida", typeof(System.DateTime));
    
            var precioInicialParameter = precioInicial.HasValue ?
                new ObjectParameter("PrecioInicial", precioInicial) :
                new ObjectParameter("PrecioInicial", typeof(decimal));
    
            var adelantoParameter = adelanto.HasValue ?
                new ObjectParameter("Adelanto", adelanto) :
                new ObjectParameter("Adelanto", typeof(decimal));
    
            var precioRestanteParameter = precioRestante.HasValue ?
                new ObjectParameter("PrecioRestante", precioRestante) :
                new ObjectParameter("PrecioRestante", typeof(decimal));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_registrarRecepcion", idClienteParameter, tipoDocumentoParameter, documentoParameter, nombreParameter, apellidoParameter, correoParameter, idHabitacionParameter, fechaSalidaParameter, precioInicialParameter, adelantoParameter, precioRestanteParameter, observacionParameter, resultado);
        }
    }
}
